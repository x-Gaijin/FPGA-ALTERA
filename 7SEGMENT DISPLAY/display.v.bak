module display (
    input button1,  // Button 1 (value 1)
    input button2,  // Button 2 (value 2)
    input button3,  // Button 3 (value 4)
    input button4,  // Button 4 (value 8)
    output reg [6:0] seg_out // 7-segment display output (active low)
);

    // Create a 4-bit binary value based on the buttons
    wire [3:0] binary_in = {button4, button3, button2, button1};

    always @(*) begin
        case (binary_in)
            4'b0000: seg_out = 7'b1000000; // 0
            4'b0001: seg_out = 7'b1111001; // 1
            4'b0010: seg_out = 7'b0100100; // 2
            4'b0011: seg_out = 7'b0110000; // 3
            4'b0100: seg_out = 7'b0011001; // 4
            4'b0101: seg_out = 7'b0010010; // 5
            4'b0110: seg_out = 7'b0000010; // 6
            4'b0111: seg_out = 7'b1111000; // 7
            4'b1000: seg_out = 7'b0000000; // 8
            4'b1001: seg_out = 7'b0010000; // 9
            default: seg_out = 7'b1111111; // Blank (default case)
        endcase
    end
endmodule
